---
import FilledArrowCircle from "../icons/FilledArrowCircle.astro";
import Text from "./Text.astro";
const {
  title,
  secondary,
  icon,
  class: className,
  buttonType = "primary",
  type = "button",
  textClass = "",
  buttonClass,
} = Astro.props;

const Icon = icon ? icon : FilledArrowCircle;
const buttonClassName = {
  primary: "primary text-white",
  secondary: "bg-white secondary text-white",
  yellow: "bg-yellow text-shades-blue-dark",
  default: "default text-white",
};
---

<div
  class:list={[
    className,
    "flex-shrink-0 font-sans",
    "[&.loading_.icon]:!hidden [&.loading_.loading-icon]:!block",
  ]}
>
  <button
    type={type}
    class:list={[
      "flex flex-row items-center py-[12px] px-[28px]  rounded-full  button overflow-hidden relative",
      buttonClassName[buttonType],
      buttonClass,
    ]}
    style={{
      // boxShadow: "0px 10px 20px rgba(0, 0, 0, 0.2)",
      background:
        buttonType === "primary"
          ? "radial-gradient(622.23% 84.05% at 22.47% 60.38%, #1762B9 0%, #114A8D 100%)"
          : "radial-gradient(50% 50% at 50% 50%, #E29D16 0%, #DA9815 100%)",
    }}
  >
    <Text
      type="base"
      class={`
          ${!secondary ? "!text-white" : "!text-green-400"}
          font-[500] tracking-[0.1px] text-[20px]
          ${textClass}
          !font-display
        `}
    >
      <slot />
    </Text>
    <div class="w-5 h-5 ml-2 icon">
      <slot name="icon">
        <Icon />
      </slot>
    </div>

    <div class="w-8 h-8 ml-2 loading-icon hidden">
      <svg
        version="1.1"
        id="L9"
        xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink"
        x="0px"
        y="0px"
        viewBox="0 0 100 100"
        enable-background="new 0 0 0 0"
        xml:space="preserve"
      >
        <path
          fill="#fff"
          d="M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50"
        >
          <animateTransform
            attributeName="transform"
            attributeType="XML"
            type="rotate"
            dur="1s"
            from="0 50 50"
            to="360 50 50"
            repeatCount="indefinite"></animateTransform>
        </path>
      </svg>
    </div>
  </button>
</div>

<style>
  .button:before {
    content: "";
    position: absolute;
    width: 100px;
    height: 100%;
    background-image: linear-gradient(
      120deg,
      rgba(255, 255, 255, 0) 30%,
      rgba(255, 255, 255, 0.8),
      rgba(255, 255, 255, 0) 70%
    );
    top: 0;
    left: -100px;
    opacity: 0.6;
    animation: none; /* Animation */
  }

  .button {
    transition: all 0.3s ease-in-out;
    /* transform: scale(1); */
  }

  .button:hover::before {
    animation: shine 1.5s ease-out infinite;
  }

  .button.secondary:hover::before,
  button.default:hover::before {
    animation: none;
  }

  .button .icon {
    transition: all 0.3s ease-in-out;
  }
  .button:hover .icon {
    transform: translateX(4px);
  }

  .button:hover {
    transform: scale(1.05);
    border-color: rgba(255, 255, 255, 0.6);
  }

  @keyframes shine {
    0% {
      left: -100px;
    }
    60% {
      left: 100%;
    }
    100% {
      left: 100%;
    }
  }
</style>
